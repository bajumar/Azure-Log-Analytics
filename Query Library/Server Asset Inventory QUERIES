Heartbeat-based Query Examples

// Table of Linux OS versions as of the last Heartbeat, by Computer
Heartbeat
| where OSType == "Linux"
| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer
| extend Version = strcat( OSMajorVersion, ".", OSMinorVersion )
| project Computer, OSType, OSName, Version, ComputerIP, ComputerEnvironment
| sort by Computer asc

// Table of Windows OS versions as of the last Heartbeat, by Computer
// Server is assumed, as OS version numbers are the same for equivalent Desktop and Server families
// Reference: https://docs.microsoft.com/en-us/windows/desktop/SysInfo/operating-system-version
let ServerVersion = datatable (Version: string, VersionName:string)
[
    "10.0", "Server 2016/2019",
     "6.3", "Server 2012 R2",
     "6.2", "Server 2012",
     "6.1", "Server 2008 R2",
     "6.0", "Server 2008" ,
     "5.2", "Server 2003 / 2003 R2",
     "5.0", "Server 2000"
];
Heartbeat
| where OSType == "Windows"
| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer
| extend Version = strcat (OSMajorVersion, ".", OSMinorVersion)
| join kind = leftouter ( ServerVersion ) on Version
| extend OSName = strcat ( OSType, " ", VersionName )
| project Computer, OSType, OSName, Version, ComputerIP, ComputerEnvironment
| sort by Computer asc

// Table of All (Windows and Linux) OS versions as of the last Heartbeat, by Comptuer
// Server is assumed, as OS version numbers are the same for equivalent Desktop and Server families
// Reference: https://docs.microsoft.com/en-us/windows/desktop/SysInfo/operating-system-version
let ServerVersion = datatable (Version: string, VersionName:string)
[
    "10.0", "Server 2016/2019",
     "6.3", "Server 2012 R2",
     "6.2", "Server 2012",
     "6.1", "Server 2008 R2",
     "6.0", "Server 2008" ,
     "5.2", "Server 2003 / 2003 R2",
     "5.0", "Server 2000"
];
Heartbeat
| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer
| extend Version = strcat (OSMajorVersion, ".", OSMinorVersion)
| join kind = leftouter ( ServerVersion ) on Version
| extend OSName = iif ( isempty ( OSName), strcat ( OSType, " ", VersionName ), OSName )
| project Computer, OSType, OSName, Version, ComputerIP, ComputerEnvironment
| sort by Computer asc

// Pie Chart of All (Windows and Linux) OS versions as of the last Heartbeat, by Environment, OSType, OSName
// Before saving or pinning, enable both "Split By" values to make the visulaization more impactful
// Server is assumed, as OS version numbers are the same for equivalent Desktop and Server families
// Reference: https://docs.microsoft.com/en-us/windows/desktop/SysInfo/operating-system-version
let ServerVersion = datatable (Version: string, VersionName:string)
[
    "10.0", "Server 2016/2019",
     "6.3", "Server 2012 R2",
     "6.2", "Server 2012",
     "6.1", "Server 2008 R2",
     "6.0", "Server 2008" ,
     "5.2", "Server 2003 / 2003 R2",
     "5.0", "Server 2000"
];
Heartbeat
| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer
| extend Version = strcat (OSMajorVersion, ".", OSMinorVersion)
| join kind = leftouter ( ServerVersion ) on Version
| extend OSName = iif ( isempty ( OSName ), strcat ( OSType, " ", VersionName ), OSName )
| summarize count() by ComputerEnvironment, OSType, OSName
| render piechart
